# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# man 5 sway
# man sway
# swaymsg -t get_outputs
# ...

set $mod Mod4


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8
#font xft:DejaVu Sans Mono 8
#font pango:Siji, Terminus 8
font pango:Siji, DejaVu 8
# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

#exec --no-startup-id pkill redshift || sleep 3 && redshift -l 44:26 -b 0.9 -t 5500:3700
#exec --no-startup-id pkill redshift || sleep 3 && redshift


#set $WS1 "1:: www >"
#set $WS2 "2:: mail >"
#set $WS3 "3:: term >"
#set $WS4 "4:: work >"
#set $WS5 "5:: play >"
#set $WS6 "6:: music >"
#set $WS7 "7:: docs >"
#set $WS8 "8:: chat >"
#set $WS9 "9:: file >"
#set $WS10 "10:: misc >"
set $WS1 "1:1 : term >"
set $WS2 "2:2 : work >"
set $WS3 "3:3 : www >"
set $WS4 "4:4 : mail >"
set $WS5 "5:5 : music >"
set $WS6 "6:6 : misc >"
set $WS7 "7:7 : misc >"
set $WS8 "8:8 : misc >"
set $WS9 "9:9 : misc >"
set $WS10 "10:10 : misc >"

set $WSWWW $WS3
set $WSMAIL $WS4
set $WSTERM $WS1
set $WSWORK $WS2
set $WSMUSIC $WS5


assign [class="Firefox"] $WSWWW
assign [class="Thunderbird"] $WSMAIL
assign [class="Chromium-Browser"] $WSWWW

# Somehow not working
assign [class="Spotify"] $WSMUSIC
#assign [instance="spotify"] $WSMUSIC


for_window [window_type=dialog] floating enable

# use xprop to get class
#for_window [class="Nautilus"] floating enable
#for_window [class="File-roller"] floating enable
#for_window [class="vlc"] floating enable

for_window [class="conky"] floating enable
for_window [class="conky"] sticky enable
for_window [class="conky"] border none


#for_window [class="polybar-example_XWAYLAND0"] floating enable
#for_window [class="polybar"] sticky enable
#for_window [class="polybar"] border none

#for_window [class="^URxvt$"] floating enable
for_window [class="^URxvt$"] border pixel 1
for_window [class="^Zathura$"] border pixel 1

# start a terminal
#set $term st -t "Terminal"
#set $term urxvt -e bash -c "tmux new-session -A -s 0"
#set $term urxvt -e tmux new-session -A -s 0
#set $termem urxvt 
#set $termem terminology 
#set $termem terminator
#set $termem termite
set $termem kitty
#set $term $termem -e tmux new-session -A -s 0 -t 
#set $termg $termem -e tmux new-session -t 
#set $term2 $termem -e tmux new-session -A -s 1 -t 
#set $termg2 $termem -e tmux new-session -t 
set $TMUXDEFAULTGROUP Default
#bindsym $mod+Return exec $term $TMUXDEFAULTGROUP
#bindsym $mod+shift+Return exec $termg $TMUXDEFAULTGROUP
#bindsym $mod+n exec $term2 G1
#bindsym $mod+shift+n exec $termg2 G1
##bindsym $mod+Return       exec $termem -e "tmux new-session -A -s 0 -t $TMUXDEFAULTGROUP"
##bindsym $mod+shift+Return exec $termem -e "tmux new-session -t $TMUXDEFAULTGROUP"
##bindsym $mod+n            exec $termem -e "tmux new-session -A -s 1 -t G1"
##bindsym $mod+shift+n      exec $termem -e "tmux new-session -t G1"
bindsym $mod+Return       exec $termem tmux new-session -A -s 0 -t $TMUXDEFAULTGROUP
bindsym $mod+shift+Return exec $termem tmux new-session -t $TMUXDEFAULTGROUP
bindsym $mod+n            exec $termem tmux new-session -A -s 1 -t G1
bindsym $mod+shift+n      exec $termem tmux new-session -t G1
#bindsym $mod+Return exec i3-sensible-terminal 
#bindsym $mod+Return exec i3-sensible-terminal urxvt -e bash -c "tmux -q has-session && exec tmux attach-session -d || exec tmux new-session -n$USER -s$USER@$HOSTNAME"

# kill focused window
bindsym $mod+Shift+q kill

 
# start dmenu (a program launcher)
#set $menu dmenu_run -fn "Terminus:size=9" -nb "#080808" -nf "#A5A5A5" -sb "#75507B" -sf "#080808" -l 7
set $menu dmenu_run -fn "DejaVu:size=16" -l 7
#set $menu rofi -show run
bindsym $mod+d exec $menu
bindsym $mod+shift+d exec pkill rofi
#bindsym --no-startup-id  $mod+d exec $menu
#bindsym $mod+d exec j4-dmenu-desktop
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop


set $network networkmanager_dmenu
bindsym $mod+i exec $network

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+H move left
bindsym $mod+Shift+J move down
bindsym $mod+Shift+K move up
bindsym $mod+Shift+L move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+c focus child

# switch to workspace

bindsym $mod+1 workspace $WS1
bindsym $mod+2 workspace $WS2
bindsym $mod+3 workspace $WS3
bindsym $mod+4 workspace $WS4
bindsym $mod+5 workspace $WS5
bindsym $mod+6 workspace $WS6
bindsym $mod+7 workspace $WS7
bindsym $mod+8 workspace $WS8
bindsym $mod+9 workspace $WS9
bindsym $mod+0 workspace $WS10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $WS1
bindsym $mod+Shift+2 move container to workspace $WS2
bindsym $mod+Shift+3 move container to workspace $WS3
bindsym $mod+Shift+4 move container to workspace $WS4
bindsym $mod+Shift+5 move container to workspace $WS5
bindsym $mod+Shift+6 move container to workspace $WS6
bindsym $mod+Shift+7 move container to workspace $WS7
bindsym $mod+Shift+8 move container to workspace $WS8
bindsym $mod+Shift+9 move container to workspace $WS9
bindsym $mod+Shift+0 move container to workspace $WS10

#bindsym $mod+n exec i3-input -F 'rename workspace to "%s"' -P 'New Name: '
#bindsym $mod+m exec i3-input -F 'workspace "%s"' -P 'Workspace: '
#bindsym $mod+shift+m exec i3-input -F 'move container to workspace "%s"' -P 'Move to Workspace: '

workspace_auto_back_and_forth yes

#scratchpad
bindsym $mod+shift+minus move scratchpad
bindsym $mod+minus scratchpad show

#screenshot
#bindsym --release $mod+p exec --no-startup-id import -window root ~/latest-screenshot.png
bindsym Print exec swaygrab ~/Pictures/screenshots/$(date +"%Y-%m-%d_%H:%M:%S.png")

# reload the configuration file
bindsym $mod+Shift+g reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+R restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+e exit

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

bar {
    status_command i3blocks
    position top
    separator_symbol ""
    strip_workspace_numbers yes
    #pango_markup enabled
    #font swaybar-icons 8
    #font pango:Siji, Terminus 12
    #font pango:Source Code Pro 12
    font pango:Siji, DejaVu 12
    colors {
        separator #AAAAAA
        background #1f2326
        statusline #FFFFFF
        focused_workspace #9FCA56 #9FCA56 #151718
        active_workspace #DCCD69 #DCCD69 #151718
        inactive_workspace #1f2326 #1f2326 #AAAAAA
        urgent_workspace #CE4045 #CE4045 #FFFFFF
    }

  
    # colors {
    #     statusline #f9f9f9
    #     background #080808
    #     focused_workspace  #080808 #080808 #AD7FA8
    #     inactive_workspace #080808 #080808 #75507B
    # }
}

#set $Locker i3lock -c 221000 && sleep 1
set $Locker i3lock -c 000000 && sleep 1

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    #bindsym e exec --no-startup-id i3-msg exit, mode "default"
    #bindsym e exec --no-startup-id swaymsg exit, mode "default"
    bindsym e exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"  

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#bindsym $mod+Pause mode "$mode_system"
bindsym $mod+shift+p mode "$mode_system"


set $mode_monitor Monitor (d) Dual, (l) LCD Only, (1) eDP1+HDMI1, (2) ePD1+HDMI2, (3) ePD1+HDMI3, (h) Home, (w) Work
mode "$mode_monitor" {
    bindsym d exec --no-startup-id xrandr --output VIRTUAL1 --off --output eDP1 --mode 1920x1080 --pos 0x0 --rotate normal --output HDMI3 --same-as eDP1 --output HDMI2 --same-as eDP1 --output HDMI1 --same-as eDP1 --output VGA1 --same-as eDP1, mode "default"
    bindsym l exec --no-startup-id xrandr --output VIRTUAL1 --off --output eDP1 --mode 1920x1080 --pos 0x0 --rotate normal --output HDMI3 --off --output HDMI2 --off --output HDMI1 --off --output VGA1 --off, mode "default"
    bindsym 1 exec --no-startup-id xrandr --output VIRTUAL1 --off --output eDP1 --mode 1920x1080 --pos 0x0 --rotate normal --output HDMI1 --right-of eDP1, mode "default"
    bindsym 2 exec --no-startup-id xrandr --output VIRTUAL1 --off --output eDP1 --mode 1920x1080 --pos 0x0 --rotate normal --output HDMI2 --right-of eDP1, mode "default"
    bindsym 3 exec --no-startup-id xrandr --output VIRTUAL1 --off --output eDP1 --mode 1920x1080 --pos 0x0 --rotate normal --output HDMI3 --right-of eDP1, mode "default"
    bindsym h exec --no-startup-id /home/geier/.screenlayout/home.sh, mode "default"
    bindsym w exec --no-startup-id /home/geier/.screenlayout/work.sh, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
#bindsym $mod+shift+s mode "$mode_monitor"

bindsym $mod+z sticky enable
bindsym $mod+shift+z sticky disable
bindsym $mod+m exec sconky
bindsym $mod+shift+m exec pkill conky


# class                 border  backgr. text    indicator
client.focused #4F99D3 #4F99D3 #151718 #9FCA56
client.focused_inactive #9FCA56 #9FCA56 #151718 #A074C4
client.unfocused #1f2326 #1f2326 #AAAAAA #A074C4
client.urgent #CE4045 #CE4045 #FFFFFF #DCCD69


# Gaps
gaps inner 5
gaps outer 2

#smart_gaps on


input "2:7:SynPS/2_Synaptics_TouchPad" {
  tap enabled
  middle_emulation enabled
  accel_profile adaptive
  pointer_accel 0.3
}

bindsym XF86AudioRaiseVolume exec pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') 0 && pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +5% && volnoti-show `ponymix 2>&1 | egrep -o '[0-9]+%' -m 1` 
bindsym XF86AudioLowerVolume exec pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') 0 && pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -5% && volnoti-show `ponymix 2>&1 | egrep -o '[0-9]+%' -m 1`
#bindsym XF86AudioMute exec pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle && volnoti-show -m
#bindsym XF86AudioMute exec pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle && eval $(if [ $(pacmd list-sinks | sed -e 's/^\(.*index:.*\)/\f\1/' | awk 'BEGIN { RS="\f" } /* index/ {print}' | grep 'muted' | sed -e 's/^.*: yes$/1/' | sed -e 's/^.*: no$/0/') -eq 1 ]; then volnoti-show -m; else volnoti-show `ponymix 2>&1 | egrep -o '[0-9]+%' -m 1`; fi)
#bindsym XF86AudioMute exec volnoti-show $(if [ $(pacmd list-sinks | sed -e 's/^\(.*index:.*\)/\f\1/' | awk 'BEGIN { RS="\f" } /* index/ {print}' | grep 'muted' | sed -e 's/^.*: yes$/1/' | sed -e 's/^.*: no$/0/') -eq 1 ]; then echo "-m"; else echo "`ponymix 2>&1 | egrep -o '[0-9]+%' -m 1`"; fi)
bindsym XF86AudioMute exec pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle &&  volnoti-show $(pacmd list-sinks | sed -e 's/^\(.*index:.*\)/\f\1/' | awk 'BEGIN { RS="\f" } /* index/ {print}' | grep 'muted' | sed -e 's/^.*: yes$/-m/' | sed -e 's/^.*: no$/'`ponymix 2>&1 | egrep -o '[0-9]+%' -m 1`'/') 

#bindsym XF86MonBrightnessDown exec brightnessctl s 5%-
#bindsym XF86MonBrightnessUp exec brightnessctl s +5%
bindsym XF86MonBrightnessDown exec light -U 5
bindsym XF86MonBrightnessUp exec light -A 5

#output "*" background ~/Pictures/Backgrounds/DSC02527.jpg fill
#output "*" background ~/Pictures/Backgrounds/DSC01493.jpg fill
output "*" background ~/Pictures/Backgrounds/DSC03304.JPG fill


set $LCD "eDP-1"
set $HDMI1 "HDMI-A-1"
set $HDMI2 "HDMI-A-2"

#output $LCD pos 0 0
#output $HDMI2 pos 1920 0
workspace $WS10 output $HDMI1
workspace $WS10 output $HDMI2 

exec --no-startup-id [[ -f ~/.Xresources ]] && xrdb -merge -I$HOME ~/.Xresources
#exec --no-startup-id urxvtd -q -f -o
exec --no-startup-id volnoti
#exec --no-startup-id dunst
#exec --no-startup-id pasystray
#exec --no-startup-id nm-applet
#exec_always --no-startup-id $HOME/.config/polybar/launch.sh
